[
  {
    "description": "should_return_all_homework_quizzes",
    "request": {
      "uri": "/homeworkQuizzes",
      "method": "get"
    },
    "response": {
      "json": {
        "homeworkQuizzes": [
          {
            "homeworkName": "homework1",
            "evaluateScript": "/homework-script/check-readme.sh",
            "templateRepository": "",
            "createTime": 123456,
            "description": "## 编程题答题说明\n点击编程题进入答题页面后，您可以看到导航栏处三个标签，分别为：**题目说明**，**提交作业**，**运行结果**\n### 题目说明\n题目说明标签内包含：\n![All text](https://raw.githubusercontent.com/sialvsic/TwicePic/master/desc1.jpg)\n![Alt text](https://raw.githubusercontent.com/sialvsic/TwicePic/master/desc2.jpg)\n![Alt text](https://raw.githubusercontent.com/sialvsic/TwicePic/master/desc3.jpg)\nNOTE：编程题模板库是便于用户的答题操作，根据题目的难易程度可能提供或者不提供\n### 提交作业\n提交作业标签内包含：\n**编程题模板库地址**，**github仓库地址**，**github仓库分支**\n![Alt text](https://raw.githubusercontent.com/sialvsic/TwicePic/master/commit.jpg)\n\n用户在本地做完每道编程题后在此标签内提交编程题的github地址\n### 运行结果\n- 用户在提交题目后，系统会自行进行处理\n![Alt text](https://raw.githubusercontent.com/sialvsic/TwicePic/master/light.jpg)\n- 若结果正确，则下一题解锁，用户继续完成下一题目\n![Alt text](https://raw.githubusercontent.com/sialvsic/TwicePic/master/success.jpg)\n- 若错误，请继续完成本题目，直至正确或答题超时\n![Alt text](https://raw.githubusercontent.com/sialvsic/TwicePic/master/fail.jpg)\n  \n## 编程题答题注意事项\n- 每道题设有答题时间期限，超时后用户将失去答题资格\n- 因题目难度不同，**答题流程也不太相同**\n- 因题目难度不同，**题目运行结果时间不定**，请耐心等待\n- 因题目难度不同，**编程题模板库可能不提供**\n\n---------------------------------------------------\n以下为本题内容\n\n## 题目要求\n- 请在开始答题后 `7` 天内完成\n\n#### 题目描述\n根据如下顺序完成题目：\n- 请新建一个github账户\n- 请初始化一个github仓库\n- 请在该库内新建一个名为`readme.md`的文件(注意全部小写)\n\n## 答题流程\n1. 请用户仔细阅读题目要求和题目描述\n2. 使用以下命令初始化git（如果不会使用git和github，请先学习参考资料的内容）\n\t```\n\tgit init\n\t```\n3. 使用以下命令设置github远程仓库地址 (url代表你自己的新的github地址)\n\t```\n\t git remote add origin url\n\t```\n4. 请使用**git提交(commit)**并**上传(push)**，之后将此github仓库地址(用户自建的) eg:（https://github.com/username/repo） 填入到提交地址一栏 \n\n5. 获取分支\n\n6. 提交\n\n7. 等待结果\n\n## 考察要点\n- github仓库的使用\n- git基础\n\n## 编程题模板库地址\n本题不存在编程题模板库地址\n\n## 参考资料\n1. [Git for Windows](https://github.com/doggy8088/Learn-Git-in-30-days/blob/master/docs/02%20%E5%9C%A8%20Windows%20%E5%B9%B3%E5%8F%B0%E5%BF%85%E8%A3%9D%E7%9A%84%E4%B8%89%E5%A5%97%20Git%20%E5%B7%A5%E5%85%B7.markdown)\n2. [try git](https://try.github.io/levels/1/challenges/1)\n3. [Git 参考手册](http://gitref.org/zh/index.html)\n4. [github用法](https://guides.github.com/activities/hello-world/)\n",
            "id": 1,
            "makerId": 1,
            "makerName": "测试一",
            "type": "JavaScript",
            "answerPath": "/homework-answer/check-readme",
            "uri": "homeworkQuizzes/1"
          },
          {
            "homeworkName": "homework2",
            "evaluateScript": "/homework-script/calculate_median.sh",
            "templateRepository": "https://github.com/simpletrain/easy-calculate.git",
            "createTime": 123457,
            "description": "## 题目要求\n- 请用JavaScript语言完成此题\n- 请在开始答题后 `7` 天内完成\n\n------------------\n## 题目描述\n写一个函数，使该函数返回输入数组中所有第偶数个元素的中位数：\n\n```\n输入&&输出：\n当输入数据为 [1,2,3,4]时      输出为 3\n```\n\t\n**NOTE：**请注意数据格式\n\n------------\n\n## 答题流程\n1. 请用户仔细阅读题目要求和题目描述\n\n2. 在命令行中使用以下命令在用户本地任意目录下clone此题目库\n\t\n\t```\t\n\t$ git clone https://github.com/simpletrain/easy-calculate.git\n\t```\t\nNOTE：如果提示git命令未找到请先阅读参考资料\n\n3. 用任意编辑器打开clone下来的名为**easy-calculate**的文件夹，内部会存在两个文件夹\n\t\n\t```\n\tspec  //测试文件夹\n\tsrc   //源文件\n\t```\n`请在src文件下的calculate-median.js文件内实现calculate_median函数`\n\n4. 完成函数后，请先执行以下命令删除.git文件夹(隐藏文件夹)\n\t```\n\trm -rf .git\n\t```\n5. 使用以下命令初始化git\n\t```\n\tgit init\n\t```\n6. 使用以下命令设置github远程仓库地址 (url代表你自己的新的github地址)\n\t```\n\t git remote add origin url\n\t```\n7. 请使用**git提交(commit)**并**上传(push)**，之后将此github仓库地址(用户自建的) eg:（https://github.com/username/repo） 填入到提交地址一栏 \n\n8. 获取分支\n\n9. 提交\n\n10. 等待结果\n\n-------------------------\n\n\n## 测试文件spec的用法（可选）\n为了使用户在本地更好的验证自己所写函数是否正确，我们提供了一套测试环境（**jasmine**）便于用户验证javascript代码是否正确。\n\n### 用法\n- 首先在本地下载并安装 node\n- 命令行中执行以下命令安装 jasmine\n\t\n\t````\n\t$ npm install -g jasmine\n\t````\n- 命令行中切换到此题的目录下 执行：\n\t\n\t````\n\t$ jasmine\n\t````\n- 根据命令行的提示，用户可判断代码的出错问题\n\n-------------------------\n## 考察要点\n- javascript基础\n\n------------------------\n\n\n## 编程题模板库地址\n\n`https://github.com/simpletrain/easy-calculate.git`\n\n------------------------\n\n## 参考资料\n1. [npm 下载安装](https://github.com/npm/npm)\n2. [node 下载安装](https://github.com/creationix/nvm)\n3. [jasmine用法](http://jasmine.github.io/2.4/introduction.html)\n4. [git用法1](https://git.oschina.net/progit/)\n5. [git用法2](http://gitref.org/zh/index.html)\n6. [github用法](http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00137628548491051ccfaef0ccb470894c858999603fedf000)",
            "id": 2,
            "makerId": 2,
            "makerName": "测试二",
            "type": "JavaScript",
            "answerPath": "/homework-answer/calculate_median",
            "uri": "homeworkQuizzes/2"
          },
          {
            "homeworkName": "homework3",
            "evaluateScript": "/homework-script/calculate_median.sh",
            "templateRepository": "https://github.com/simpletrain/easy-calculate.git",
            "createTime": 123458,
            "description": "## 题目要求\n- 请用JavaScript语言完成此题\n- 请在开始答题后 `7` 天内完成\n\n------------------\n## 题目描述\n写一个函数，使该函数返回输入数组中所有第偶数个元素的中位数：\n\n```\n输入&&输出：\n当输入数据为 [1,2,3,4]时      输出为 3\n```\n\t\n**NOTE：**请注意数据格式\n\n------------\n\n## 答题流程\n1. 请用户仔细阅读题目要求和题目描述\n\n2. 在命令行中使用以下命令在用户本地任意目录下clone此题目库\n\t\n\t```\t\n\t$ git clone https://github.com/simpletrain/easy-calculate.git\n\t```\t\nNOTE：如果提示git命令未找到请先阅读参考资料\n\n3. 用任意编辑器打开clone下来的名为**easy-calculate**的文件夹，内部会存在两个文件夹\n\t\n\t```\n\tspec  //测试文件夹\n\tsrc   //源文件\n\t```\n`请在src文件下的calculate-median.js文件内实现calculate_median函数`\n\n4. 完成函数后，请先执行以下命令删除.git文件夹(隐藏文件夹)\n\t```\n\trm -rf .git\n\t```\n5. 使用以下命令初始化git\n\t```\n\tgit init\n\t```\n6. 使用以下命令设置github远程仓库地址 (url代表你自己的新的github地址)\n\t```\n\t git remote add origin url\n\t```\n7. 请使用**git提交(commit)**并**上传(push)**，之后将此github仓库地址(用户自建的) eg:（https://github.com/username/repo） 填入到提交地址一栏 \n\n8. 获取分支\n\n9. 提交\n\n10. 等待结果\n\n-------------------------\n\n\n## 测试文件spec的用法（可选）\n为了使用户在本地更好的验证自己所写函数是否正确，我们提供了一套测试环境（**jasmine**）便于用户验证javascript代码是否正确。\n\n### 用法\n- 首先在本地下载并安装 node\n- 命令行中执行以下命令安装 jasmine\n\t\n\t````\n\t$ npm install -g jasmine\n\t````\n- 命令行中切换到此题的目录下 执行：\n\t\n\t````\n\t$ jasmine\n\t````\n- 根据命令行的提示，用户可判断代码的出错问题\n\n-------------------------\n## 考察要点\n- javascript基础\n\n------------------------\n\n\n## 编程题模板库地址\n\n`https://github.com/simpletrain/easy-calculate.git`\n\n------------------------\n\n## 参考资料\n1. [npm 下载安装](https://github.com/npm/npm)\n2. [node 下载安装](https://github.com/creationix/nvm)\n3. [jasmine用法](http://jasmine.github.io/2.4/introduction.html)\n4. [git用法1](https://git.oschina.net/progit/)\n5. [git用法2](http://gitref.org/zh/index.html)\n6. [github用法](http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00137628548491051ccfaef0ccb470894c858999603fedf000)",
            "id": 3,
            "makerId": 2,
            "makerName": "测试二",
            "type": "Java",
            "answerPath": "/homework-answer/calculate_median",
            "uri": "homeworkQuizzes/3"
          },
          {
            "homeworkName": "homework4",
            "evaluateScript": "/homework-script/configure.sh",
            "templateRepository": "https://github.com/purpletianjing/test-post.git",
            "createTime": 123459,
            "description": "## 题目要求\n- 请用javascript语言完成此题\n- 请在开始答题后 `7` 天内完成\n\n------------------\n## 题目描述\n实现src/collect_all_even.js中的collect_same_elements函数，使该函数满足如下要求：\n\n选出A集合中元素的key属性，跟B对象中value属性中的元素相同的元素\n```\n输入&&输出：\n输入: \nA = [{key: \"a\"}, {key: \"e\"}, {key: \"h\"}, {key: \"t\"}, {key: \"f\"}, {key: \"c\"}, {key: \"g\"}, {key: \"b\"}, {key: \"d\"}];\nB = {value: [\"a\", \"d\", \"e\", \"f\"]};\n输出:\n[\"a\", \"e\", \"f\", \"d\"]\n```\n**NOTE：**请注意数据格式，不要更改函数名和参数个数,参数类型\n\n------------\n\n## 答题流程\n1. 请用户仔细阅读题目要求和题目描述\n\n2. 在命令行中使用以下命令在用户本地任意目录下clone此题目库\n\n\t```\n\tgit clone https://github.com/purpletianjing/test-post.git\n\t\n\t```\nNOTE：如果提示git命令未找到请先阅读参考资料\n\n3. 用任意编辑器打开clone下来的名为**test-post**的文件夹，内部会存在两个文件夹\n\n\t```\n\tspec  //测试文件夹\n\tsrc   //源文件\n\t\t\n\t```\n`请在src文件下的collect_all_even.js文件内实现collect_same_elements函数`\n\n4. 完成函数后，请先执行以下命令删除.git文件夹(隐藏文件夹)\n\t```\n\trm -rf .git\n\t```\n5. 使用以下命令初始化git\n\t```\n\tgit init\n\t```\n6. 使用以下命令设置github远程仓库地址 (url代表你自己的新的github地址)\n\t```\n\t git remote add origin url\n\t```\n7. 请使用**git提交(commit)**并**上传(push)**，之后将此github仓库地址(用户自建的) eg:（https://github.com/username/repo） 填入到提交地址一栏 \n\n8. 获取分支\n\n9. 提交\n\n10. 等待结果\n-------------------------\n\n\n## 测试文件spec的用法（可选）\n为了使用户在本地更好的验证自己所写函数是否正确，我们提供了一套测试环境（**jasmine**）便于用户验证javascript代码是否正确。\n\n### 用法\n- 首先在本地下载并安装 node\n- 命令行中执行以下命令安装 jasmine\n```\n\tnpm install\n```\n- 在命令行中执行：\n```\n\tnpm test\n```\n- 根据命令行的提示，用户可判断代码的出错问题\n\n-------------------------\n## 考察要点\n- javascript基础\n\n------------------------\n\n\n## 编程题模板库地址\nhttps://github.com/purpletianjing/test-post.git\n\n------------------------\n\n## 参考资料\n1. [javascript基础参考资料](http://www.codefordream.com/paths/javascript/courses)\n2. [javascript array参考资料](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array)",
            "id": 4,
            "makerId": 1,
            "makerName": "测试一",
            "type": "Java",
            "answerPath": "/homework-answer/configure",
            "uri": "homeworkQuizzes/4"
          },
          {
            "homeworkName": "homework5",
            "evaluateScript": "/homework-script/collection-calculate-camp.sh",
            "templateRepository": "https://github.com/wengjiaojiao/empty-flaten.git",
            "createTime": 123450,
            "description": "## 题目要求\n- 请用javascript语言完成此题\n- 请在开始答题后 `7` 天内完成\n\n------------------   \n## 题目描述\n分别写两个函数，使函数分别满足以下要求：\n```\n1.把二维数组变成一维数组\n输入：[1, [2], [3, 4]]\n输出：[1, 2, 3, 4]\n2.消除重复,按照第一次出现的顺序排列最后的输出结果\n输入：[[1, 2, 3], [5, 2, 1, 4], [2, 1]]\n输出：[1, 2, 3, 5, 4]\n```\n**NOTE：**请注意数据格式\n\n------------\n\n## 答题流程\n1. 请用户仔细阅读题目要求和题目描述\n2. 在命令行中使用以下命令在用户本地任意目录下clone此题目库\n\n\t```\n\tgit clone https://github.com/wengjiaojiao/empty-flaten.git\n\n\t```\n\tNOTE：如果提示git命令未找到请先阅读参考资料\n\n3. 用任意编辑器打开clone下来的名为**empty-flaten**的文件夹，内部会存在两个文件夹\n\n\t```\n\tspec  //测试文件夹\n\tpractices   //源文件\n\n\t```\n    `请在practices文件下flaten的js文件内，创建两个分别名为double_dimensional_array_to_one_1.js 和 double_dimensional_array_to_one_2.js的文件，在文件里实现相应函数`\n\n4. 完成函数后，请先执行以下命令删除.git文件夹(隐藏文件夹)\n\t```\n\trm -rf .git\n\t```\n5. 使用以下命令初始化git\n\t```\n\tgit init\n\t```\n6. 使用以下命令设置github远程仓库地址 (url代表你自己的新的github地址)\n\t```\n\t git remote add origin url\n\t```\n7. 请使用**git提交(commit)**并**上传(push)**，之后将此github仓库地址(用户自建的) eg:（https://github.com/username/repo） 填入到提交地址一栏 \n\n8. 获取分支\n\n9. 提交\n\n10. 等待结果\n\n-------------------------\n\n\n## 测试文件spec的用法（可选）\n为了使用户在本地更好的验证自己所写函数是否正确，我们提供了一套测试环境（**jasmine**）便于用户验证javascript代码是否正确。\n\n### 用法\n- 首先在本地下载并安装 node\n- 命令行中执行以下命令安装\n```\n\tnpm install \n```\n- 命令行中切换到此题的目录下 执行：\n```\n\tnpm test\n```\n- 根据命令行的提示，用户可判断代码的出错问题\n\n-------------------------\n## 考察要点\n- javascript基础\n\n------------------------\n\n\n## 编程题模板库地址\nhttps://github.com/wengjiaojiao/empty-flaten.git\n\n------------------------\n\n## 参考资料\n1. [JS在线学习](http://www.codefordream.com/)",
            "id": 5,
            "makerId": 1,
            "makerName": "测试一",
            "type": "C语言",
            "answerPath": "/homework-answer/collection-calculate-camp",
            "uri": "homeworkQuizzes/5"
          },
          {
            "homeworkName": "homework6",
            "evaluateScript": "/homework-script/prepos.sh",
            "templateRepository": "https://github.com/Lucky-LengYi/pre-pos-sec-1.git",
            "createTime": 123450,
            "description": "## 题目要求\n- 请用javascript语言完成此题\n- 请在开始答题后 `7` 天内完成\n\n------------------\n\n## 题目描述\n题目：集合运算\n\n写一个函数，使该函数满足如下要求：\n选出A集合中与B集合中相同的元素\n\n```\n输入&&输出：\n输入为：\n[\"a\", \"e\", \"h\", \"t\", \"f\", \"c\", \"g\", \"b\", \"d\"];\n[\"a\", \"d\", \"e\", \"f\"];\n\n输出为：\n[\"a\", \"e\", \"f\", \"d\"]\n```\n\n**NOTE：**请注意数据格式\n\n\n------------\n\n## 答题流程\n1. 请用户仔细阅读题目要求和题目描述\n\n2. 在命令行中使用以下命令在用户本地任意目录下clone此题目库\n\t```\t\n\thttps://github.com/Lucky-LengYi/pre-pos-sec-1.git\n\t```\nNOTE：如果提示git命令未找到请先阅读参考资料\n\n3. 用任意编辑器打开clone下来的名为**pre-pos-sec-1**的文件夹，内部会存在两个文件夹\n\t```\n\tspecs  //测试文件夹\n\tpractices   //源文件\n\t```\n\t`请在src文件下的practices下的section_1中完成对应specs下section_1中所需求的方法，方法已经定义好，请补全即可`\n\n4. 完成函数后，请先执行以下命令删除.git文件夹(隐藏文件夹)\n\t```\n\trm -rf .git\n\t```\n5. 使用以下命令初始化git\n\t```\n\tgit init\n\t```\n6. 使用以下命令设置github远程仓库地址 (url代表你自己的新的github地址)\n\t```\n\t git remote add origin url\n\t```\n7. 请使用**git提交(commit)**并**上传(push)**，之后将此github仓库地址(用户自建的) eg:（https://github.com/username/repo） 填入到提交地址一栏 \n\n8. 获取分支\n\n9. 提交\n\n10. 等待结果\n\n-------------------------\n\n\n## 测试文件specs的用法（可选）\n为了使用户在本地更好的验证自己所写函数是否正确，我们提供了一套测试环境（**jasmine-node**）便于用户验证javascript代码是否正确。\n\n### 用法\n- 首先在本地下载并安装 node\n- 命令行中执行以下命令安装环境\n\t```\n\tnpm install\n\t```\n- 命令行中切换到此题的目录下 执行：\n\t```\n\tnpm test\n\t```\n- 根据命令行的提示，用户可判断代码的出错问题\n\n-------------------------\n## 考察要点\n- javascript数组及对象\n- 递归\n\n------------------------\n\n\n## 编程题模板库地址\nhttps://github.com/Lucky-LengYi/pre-pos-sec-1.git\n\n------------------------\n\n## 参考资料\n1. [npm 下载安装](https://github.com/npm/npm)\n2. [node 下载安装](https://github.com/creationix/nvm)\n3. [jasmine用法](http://jasmine.github.io/2.4/introduction.html)\n4. [git用法1](https://github.com/doggy8088/Learn-Git-in-30-days/blob/master/docs/02%20%E5%9C%A8%20Windows%20%E5%B9%B3%E5%8F%B0%E5%BF%85%E8%A3%9D%E7%9A%84%E4%B8%89%E5%A5%97%20Git%20%E5%B7%A5%E5%85%B7.markdown)\n5. [git用法2](https://try.github.io/levels/1/challenges/1)\n6. [git简易指南](http://gitref.org/zh/index.html)\n7. [github用法](https://guides.github.com/activities/hello-world/)",
            "id": 6,
            "makerId": 1,
            "makerName": "测试一",
            "type": "C语言",
            "answerPath": "/homework-answer/prepos",
            "uri": "homeworkQuizzes/6"
          },
          {
            "homeworkName": "homework7",
            "evaluateScript": "/homework-script/fibonacci_series.sh",
            "templateRepository": "https://github.com/sialvsic/fibonacci_series.git",
            "createTime": 123450,
            "description": "## 题目要求\n- 请用javascript语言完成此题\n- 请在开始答题后 `7` 天内完成\n\n------------------\n\n## 题目描述\n题目：菲波那切数列  0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55\n写出一个生成前n+1个菲波那切数列的函数：\n```\n输入&&输出：\n当输入为1时      输出为 [0,1]\n当输入为2时      输出为 [0,1,1]\n当输入为10时     输出为 [0,1,1,2,3,5,8,13,21,34,55]\n```\n\n**NOTE：**请注意数据格式\n\n------------\n\n## 答题流程\n1. 请用户仔细阅读题目要求和题目描述\n\n2. 在命令行中使用以下命令在用户本地任意目录下clone此题目库\n\t```\n\thttps://github.com/sialvsic/fibonacci_series.git\n\t```\n\tNOTE：如果提示git命令未找到请先阅读参考资料\n\n3. 用任意编辑器打开clone下来的名为**fibonacci_series**的文件夹，内部会存在两个文件夹\n\t```\n\tspec  //测试文件夹\n\tsrc   //源文件\n\t```\n\t`请在src文件下的fibonacci_series.js文件内实现fibonacci_series函数`\n\n4. 完成函数后，请先执行以下命令删除.git文件夹(隐藏文件夹)\n\t```\n\trm -rf .git\n\t```\n5. 使用以下命令初始化git\n\t```\n\tgit init\n\t```\n6. 使用以下命令设置github远程仓库地址 (url代表你自己的新的github地址)\n\t```\n\t git remote add origin url\n\t```\n7. 请使用**git提交(commit)**并**上传(push)**，之后将此github仓库地址(用户自建的) eg:（https://github.com/username/repo） 填入到提交地址一栏 \n\n8. 获取分支\n\n9. 提交\n\n10. 等待结果\n\n-------------------------\n\n\n## 测试文件spec的用法（可选）\n为了使用户在本地更好的验证自己所写函数是否正确，我们提供了一套测试环境（**jasmine**）便于用户验证javascript代码是否正确。\n\n### 用法\n- 首先在本地下载并安装 node\n- 命令行中执行以下命令安装 jasmine\n```\n\tnpm install -g jasmine\n```\n- 命令行中切换到此题的目录下 执行：\n```\n\tjasmine\n```\n- 根据命令行的提示，用户可判断代码的出错问题\n\n-------------------------\n## 考察要点\n- javascript基础\n- 递归\n\n------------------------\n\n\n## 编程题模板库地址\nhttps://github.com/sialvsic/fibonacci_series.git\n\n------------------------\n\n## 参考资料\n1. [npm 下载安装](https://github.com/npm/npm)\n2. [node 下载安装](https://github.com/creationix/nvm)\n3. [jasmine用法](http://jasmine.github.io/2.4/introduction.html)\n4. [git用法1](https://github.com/doggy8088/Learn-Git-in-30-days/blob/master/docs/02%20%E5%9C%A8%20Windows%20%E5%B9%B3%E5%8F%B0%E5%BF%85%E8%A3%9D%E7%9A%84%E4%B8%89%E5%A5%97%20Git%20%E5%B7%A5%E5%85%B7.markdown)\n5. [git用法2](https://try.github.io/levels/1/challenges/1)\n6. [git简易指南](http://gitref.org/zh/index.html)\n7. [github用法](https://guides.github.com/activities/hello-world/)\n",
            "id": 7,
            "makerId": 1,
            "makerName": "测试一",
            "type": "Ruby",
            "answerPath": "/homework-answer/fibonacci_series",
            "uri": "homeworkQuizzes/7"
          },
          {
            "homeworkName": "homework8",
            "evaluateScript": "/homework-script/collection.sh",
            "templateRepository": "https://github.com/AnliHuer/collection.git",
            "createTime": 123450,
            "description": "## 题目要求\n- 请用javascript语言完成此题\n- 请在开始答题后 `7` 天内完成\n\n------------------\n## 题目描述\n写一个可以取出集合中所有偶数的函数，使该函数满足如下要求：\n```\n输入&&输出：\n当输入集合为 [1,2]        输出为 [2]\n当输入集合为 [0,1,2]      输出为 [0,2]\n当输入集合为 [2,4,6]      输出为 [2,4,6]\n```\n\n**NOTE：**请注意数据格式\n\n------------\n\n## 答题流程\n1. 请用户仔细阅读题目要求和题目描述\n\n2. 在命令行中使用以下命令在用户本地任意目录下clone此题目库\n```\ngit clone https://github.com/AnliHuer/collection.git\n```\nNOTE：如果提示git命令未找到请先阅读参考资料\n\n3. 用任意编辑器打开clone下来的名为**collection**的文件夹，内部会存在两个文件夹\n```\nspec  //测试文件夹\nsrc   //源文件\n```\n`请在src文件下的collect_all_even.js文件内实现collect_all_even函数`\n\n4. 完成函数后，请先执行以下命令删除.git文件夹(隐藏文件夹)\n\t```\n\trm -rf .git\n\t```\n5. 使用以下命令初始化git\n\t```\n\tgit init\n\t```\n6. 使用以下命令设置github远程仓库地址 (url代表你自己的新的github地址)\n\t```\n\t git remote add origin url\n\t```\n7. 请使用**git提交(commit)**并**上传(push)**，之后将此github仓库地址(用户自建的) eg:（https://github.com/username/repo） 填入到提交地址一栏 \n\n8. 获取分支\n\n9. 提交\n\n10. 等待结果\n\n-------------------------\n\n\n## 测试文件spec的用法（可选）\n为了使用户在本地更好的验证自己所写函数是否正确，我们提供了一套测试环境（**jasmine**）便于用户验证javascript代码是否正确。\n\n### 用法\n- 首先在本地下载并安装 node\n- 命令行中执行以下命令安装 jasmine\n```\n\tnpm install -g jasmine\n```\n- 命令行中切换到此题的目录下 执行：\n```\n\tjasmine\n```\n- 根据命令行的提示，用户可判断代码的出错问题\n\n-------------------------\n## 考察要点\n- javascript基础\n- javascript正则表达式\n\n------------------------\n\n\n## 编程题模板库地址\nhttps://github.com/AnliHuer/collection.git\n\n------------------------\n\n## 参考资料\n1. [npm 下载安装](https://github.com/npm/npm)\n2. [node 下载安装](https://github.com/creationix/nvm)\n3. [jasmine用法](http://jasmine.github.io/2.4/introduction.html)\n4. [git用法1](https://github.com/doggy8088/Learn-Git-in-30-days/blob/master/docs/02%20%E5%9C%A8%20Windows%20%E5%B9%B3%E5%8F%B0%E5%BF%85%E8%A3%9D%E7%9A%84%E4%B8%89%E5%A5%97%20Git%20%E5%B7%A5%E5%85%B7.markdown)\n5. [git用法2](https://try.github.io/levels/1/challenges/1)\n6. [git简易指南](http://gitref.org/zh/index.html)\n7. [github用法](https://guides.github.com/activities/hello-world/)\n",
            "id": 8,
            "makerId": 1,
            "makerName": "测试一",
            "type": "Ruby",
            "answerPath": "/homework-answer/collection",
            "uri": "homeworkQuizzes/8"
          }
        ]
      }
    }
  },
  {
    "description": "should_return_one_homework_quiz_when_request_save_one_homework_quiz",
    "request": {
      "uri": "/homeworkQuizzes",
      "method": "post",
      "json": {
        "description": "zhangpei",
        "evaluateScript": "/homework-script/check-readme.sh",
        "templateRepository": "https://github.com/sialvsic/thousands_separators.git",
        "makerId": 1,
        "createTime": 1111111,
        "type": "JavaScript",
        "answerPath": "/homework-answer/prepos",
        "homeworkName": "homework name"
      }
    },
    "response": {
      "json": {
        "uri": "homeworkQuizzes/9"
      }
    }
  }
]
